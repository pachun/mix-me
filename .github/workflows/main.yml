name: Main

on:
  push:
    branches: ["main"]

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint
    steps:
      - name: Checkout Mix Me
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 14.x
          cache: "yarn"
      - name: Install Dependencies
        run: yarn install
      - name: Lint
        run: yarn lint

  type-check:
    runs-on: ubuntu-latest
    name: Type Check
    steps:
      - name: Checkout Mix Me
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 14.x
          cache: "yarn"
      - name: Install Dependencies
        run: yarn install
      - name: Type Check
        run: yarn tsc

  check-prettier:
    runs-on: ubuntu-latest
    name: Check Prettier
    steps:
      - name: Checkout Mix Me
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 14.x
          cache: "yarn"
      - name: Install Dependencies
        run: yarn install
      - name: Check Prettier
        run: yarn prettier:check

  # https://docs.expo.dev/eas-update/github-actions/
  deploy:
    needs: [lint, type-check, check-prettier]
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Check for EXPO_TOKEN
        run: |
          if [ -z "${{ secrets.EXPO_TOKEN }}" ]; then
            echo "You must provide an EXPO_TOKEN secret linked to this project's Expo account in this repo's secrets. Learn more: https://docs.expo.dev/eas-update/github-actions"
            exit 1
          fi

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
          cache: yarn

      - name: Setup Expo
        uses: expo/expo-github-action@v7
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Find yarn cache
        id: yarn-cache-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --immutable

      - name: Publish update
        run: eas update --auto
